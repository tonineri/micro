# This script processes different programming languages' stack traces
# using regular expressions. The regular expressions were extracted
# from https://github.com/GoogleCloudPlatform/fluent-plugin-detect-exceptions
# and converted into a TSV format by Balazs Scheidler.
#
# List of tab-separated fields:
# state: The current state of the stack trace processor.
# regex: The regular expression to match.
# next_state: The state to transition to after a match.

# Java stack trace processing
start_state,java_start_exception   /(?:Exception|Error|Throwable|V8 errors stack trace)[:\r\n]/ java_after_exception
java_after_exception               /^[\t ]*nested exception is:[\t ]*/ java_start_exception
java_after_exception               /^[\r\n]*$/ java_after_exception
java_after_exception,java          /^[\t ]+(?:eval )?at / java
java_after_exception,java          /^[\t ]+--- End of inner exception stack trace ---$/ java
java_after_exception,java          /^--- End of stack trace from previous location where exception was thrown ---$/ java
java_after_exception,java          /^[\t ]*(?:Caused by|Suppressed):/ java_after_exception
java_after_exception,java          /^[\t ]*... \d+ (?:more|common frames omitted)/ java

# Python stack trace processing
start_state                        /^Traceback \(most recent call last\):$/ python
python                             /^[\t ]*File / python_code
python_code                        /[^\t ]/ python
python                             /^(?:[^\s.():]+\.)*[^\s.():]+:/ start_state

# PHP stack trace processing
start_state                        /(?:PHP\ (?:Notice|Parse\ error|Fatal\ error|Warning):)|(?:exception\ '[^']+'\ with\ message\ ')/ php_stack_begin
php_stack_begin                    /^Stack trace:/ php_stack_frames
php_stack_frames                   /^#\d/ php_stack_frames
php_stack_frames                   /^\s+thrown in / start_state

# Go stack trace processing
start_state                        /\bpanic: / go_after_panic
start_state                        /http: panic serving/ go_goroutine
go_after_panic,go_after_signal,go_frame_1 /^$/ go_goroutine
go_after_panic                     /^\[signal / go_after_signal
go_goroutine                       /^goroutine \d+ \[[^\]]+\]:$/ go_frame_1
go_frame_1                         /^(?:[^\s.:]+\.)*[^\s.():]+\(|^created by / go_frame_2
go_frame_2                         /^\s/ go_frame_1

# Ruby stack trace processing
start_state                        /Error \(.*\):$/ ruby_before_rails_trace
ruby_before_rails_trace            /^  $/ ruby
ruby_before_rails_trace            /^[\t ]+.*?\.rb:\d+:in `/ ruby
ruby                               /^[\t ]+.*?\.rb:\d+:in `/ ruby

# Dart stack trace processing
start_state                        /^Unhandled exception:$/ dart_exc
dart_exc                           /^(Instance of)|(Exception)|(Bad state)|(IntegerDivisionByZeroException)|(Invalid argument)|(RangeError)|(Assertion failed)|(Cannot instantiate)|(Reading static variable)|(UnimplementedError)|(Unsupported operation)|(Concurrent modification)|(Out of Memory)|(Stack Overflow)/ dart_stack
dart_exc                           /^'.+?':.+?$/ dart_type_err_1
dart_type_err_1                    /^#\d+\s+.+?\(.+?\)$/ dart_stack
dart_type_err_1                    /^.+?$/ dart_type_err_2
dart_type_err_2                    /^.*?\^.*?$/ dart_type_err_3
dart_type_err_3                    /^$/ dart_type_err_4
dart_type_err_4                    /^$/ dart_stack
dart_exc                           /^FormatException/ dart_format_err_1
dart_format_err_1                  /^#\d+\s+.+?\(.+?\)$/ dart_stack
dart_format_err_1                  /^./ dart_format_err_2
dart_format_err_2                  /^.*?\^/ dart_format_err_3
dart_format_err_3                  /^$/ dart_stack
dart_exc                           /^NoSuchMethodError:/ dart_method_err_1
dart_method_err_1                  /^Receiver:/ dart_method_err_2
dart_method_err_2                  /^Tried calling:/ dart_method_err_3
dart_method_err_3                  /^Found:/ dart_stack
dart_method_err_3                  /^#\d+\s+.+?\(.+?\)$/ dart_stack
dart_stack                         /^#\d+\s+.+?\(.+?\)$/ dart_stack
dart_stack                         /^<asynchronous suspension>$/ dart_stack
