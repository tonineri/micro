@version: 4.3
@include "scl.conf"

# Syslog-ng configuration file, compatible with default Debian syslogd installation.

# Global options
options {
    chain_hostnames(off);
    flush_lines(0);
    use_dns(no);
    use_fqdn(no);
    dns_cache(no);
    owner("root");
    group("adm");
    perm(0640);
    stats(freq(0));
    bad_hostname("^gconfd$");
};

########################
# Sources
########################

# Default source: logs from the unix stream, internal logs
source s_src {
    unix-dgram("/dev/log");
    internal();
};

# Uncomment to enable remote logging (disable above source line)
# source s_net { tcp(ip(127.0.0.1) port(1000)); };

########################
# Destinations
########################

# Standard log files
destination d_auth { file("/var/log/auth.log"); };
destination d_cron { file("/var/log/cron.log"); };
destination d_daemon { file("/var/log/daemon.log"); };
destination d_kern { file("/var/log/kern.log"); };
destination d_lpr { file("/var/log/lpr.log"); };
destination d_mail { file("/var/log/mail.log"); };
destination d_syslog { file("/var/log/syslog"); };
destination d_user { file("/var/log/user.log"); };
destination d_uucp { file("/var/log/uucp.log"); };

# Mail subsystem logs
destination d_mailinfo { file("/var/log/mail.info"); };
destination d_mailwarn { file("/var/log/mail.warn"); };
destination d_mailerr { file("/var/log/mail.err"); };

# INN news system logs
destination d_newscrit { file("/var/log/news/news.crit"); };
destination d_newserr { file("/var/log/news/news.err"); };
destination d_newsnotice { file("/var/log/news/news.notice"); };

# Catch-all log files
destination d_debug { file("/var/log/debug"); };
destination d_error { file("/var/log/error"); };
destination d_messages { file("/var/log/messages"); };

# Named pipe for nsole utility
destination d_xconsole { pipe("/dev/xconsole"); };

# Remote logging (uncomment to use)
# destination d_net { tcp("127.0.0.1" port(1000) log_fifo_size(1000)); };

# Debian-specific log
destination d_ppp { file("/var/log/ppp.log"); };

# Docker stdout
destination d_stdout { file("/dev/stdout"); };

########################
# Filters
########################

# Message level filters
filter f_dbg { level(debug); };
filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_err { level(err); };
filter f_crit { level(crit..emerg); };

# Facility filters
filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
filter f_error { level(err..emerg); };
filter f_messages {
    level(info, notice, warn) and not facility(auth, authpriv, cron, daemon, mail, news);
};

filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
filter f_cron { facility(cron) and not filter(f_debug); };
filter f_daemon { facility(daemon) and not filter(f_debug); };
filter f_kern { facility(kern) and not filter(f_debug); };
filter f_lpr { facility(lpr) and not filter(f_debug); };
filter f_local {
    facility(local0, local1, local3, local4, local5, local6, local7) and not filter(f_debug);
};
filter f_mail { facility(mail) and not filter(f_debug); };
filter f_news { facility(news) and not filter(f_debug); };
filter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug); };
filter f_user { facility(user) and not filter(f_debug); };
filter f_uucp { facility(uucp) and not filter(f_debug); };

filter f_cnews { level(notice, err, crit) and facility(news); };
filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };

filter f_ppp { facility(local2) and not filter(f_debug); };
filter f_console { level(warn..emerg); };

########################
# Log paths
########################

log { source(s_src); filter(f_auth); destination(d_auth); };
log { source(s_src); filter(f_cron); destination(d_cron); };
log { source(s_src); filter(f_daemon); destination(d_daemon); };
log { source(s_src); filter(f_kern); destination(d_kern); };
log { source(s_src); filter(f_lpr); destination(d_lpr); };
log { source(s_src); filter(f_syslog3); destination(d_syslog); destination(d_stdout); };
log { source(s_src); filter(f_user); destination(d_user); };
log { source(s_src); filter(f_uucp); destination(d_uucp); };

log { source(s_src); filter(f_mail); destination(d_mail); };
# log { source(s_src); filter(f_mail); filter(f_info); destination(d_mailinfo); };
# log { source(s_src); filter(f_mail); filter(f_warn); destination(d_mailwarn); };
# log { source(s_src); filter(f_mail); filter(f_err); destination(d_mailerr); };

log { source(s_src); filter(f_news); filter(f_crit); destination(d_newscrit); };
log { source(s_src); filter(f_news); filter(f_err); destination(d_newserr); };
log { source(s_src); filter(f_news); filter(f_notice); destination(d_newsnotice); };
# log { source(s_src); filter(f_cnews); destination(d_console_all); };
# log { source(s_src); filter(f_cother); destination(d_console_all); };

# log { source(s_src); filter(f_ppp); destination(d_ppp); };

log { source(s_src); filter(f_debug); destination(d_debug); };
log { source(s_src); filter(f_error); destination(d_error); };
log { source(s_src); filter(f_messages); destination(d_messages); };

# All messages sent to a remote site
# log { source(s_src); destination(d_net); };

# Include all config files in /etc/syslog-ng/conf.d/
@include "/etc/syslog-ng/conf.d/*.conf"
